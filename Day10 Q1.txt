class Solution {
    public TreeNode buildTree(int[] inorder, int[] postorder) {
       if(inorder.length == 1){
           return new TreeNode(inorder[0]);
       }
        return helper(0, postorder.length - 1, 0, inorder.length - 1, inorder, postorder);
    }
public TreeNode helper(int poststart, int postend, int instart, int inend, int[] inorder, int[] postorder){
            if(instart > inend){
                 return null;
             }
        TreeNode root = new TreeNode(postorder[postend]);
        int idx = 0;
    for(int i = instart; i <= inend; i++){
        if(root.val == inorder[i]){
            idx = i;
            break;
        }
    }
    int noofelements = idx - instart;
    root.left = helper(poststart, poststart + noofelements -1, instart, idx - 1, inorder, postorder);
    root.right = helper(poststart + noofelements, postend-1, idx + 1, inend, inorder, postorder);
    return root;
    }
}