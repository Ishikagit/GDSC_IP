class Solution {
    public List<TreeNode> generateTrees(int n) {
        if(n == 1){
            List<TreeNode> b = new ArrayList<>();
            b.add(new TreeNode(1));
            return b;
        }
        return helper(1, n);
    }
    public List<TreeNode> helper(int si, int ei){
        if(si > ei){
            List<TreeNode> bans = new ArrayList<>();
            bans.add(null);
            return bans;
        }
         if(si == ei){
            List<TreeNode> b = new ArrayList<>();
            b.add(new TreeNode(si));
            return b;
        }
        List<TreeNode> ans = new ArrayList<>();
        for(int i = si; i <= ei; i++){
            List<TreeNode> left = helper(si, i-1);
            List<TreeNode> right = helper(i+1, ei);
            for(TreeNode l : left){
                for(TreeNode r : right){
                    TreeNode root = new TreeNode(i);
                    root.left = l;
                    root.right = r;
                    ans.add(root);
                }
            }
        }
        return ans;
    }
}