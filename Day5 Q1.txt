class Solution {
    static class Pair{
        int start;
        int end;
    }
    public int[][] merge(int[][] intervals) {
        if(intervals.length == 1){
            return intervals;
        }
        Arrays.sort(intervals, (a,b) -> Integer.compare(a[0],b[0]));
        Stack<Pair> st = new Stack<>();
        for(int i = 0; i < intervals.length; i++){
            Pair up = new Pair();
            up.start = intervals[i][0];
            up.end = intervals[i][1];
           
                  while(st.size() > 0 && st.peek().end >= up.start){
                Pair down = st.pop();
                up.start = Math.min(down.start, up.start);
                      up.end = Math.max(down.end, up.end);
            }
            st.push(up);
            
          
        }
        int[][] ans = new int[st.size()][2];
        for(int i = ans.length - 1; i >= 0; i--){
            Pair rem = st.pop();
            ans[i][0] = rem.start;
            ans[i][1] = rem.end;
        }
        return ans;
        
    }
}