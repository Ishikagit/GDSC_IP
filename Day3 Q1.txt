class Solution {
    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> st = new Stack<>();
        st.push(asteroids[0]);
        for(int i = 1; i < asteroids.length; i++){
             if(st.size() > 0 && ((st.peek() < 0 && asteroids[i] > 0) || (st.peek() < 0 && asteroids[i] < 0) || (st.peek() > 0 && asteroids[i] > 0))){
                st.push(asteroids[i]);
     }
            else{
                while(st.size() > 0 && (Math.abs(st.peek()) < Math.abs(asteroids[i])) && (st.peek() > 0 && asteroids[i] < 0)){
                        st.pop();
                    }
                if(st.size() == 0){
                    st.push(asteroids[i]);
                    
                }else{
                      if(st.size() > 0 && Math.abs(st.peek()) == Math.abs(asteroids[i]) && (st.peek() > 0 && asteroids[i] < 0)){
                    st.pop();
                }else if(st.size() > 0 && ((st.peek() < 0 && asteroids[i] > 0) || (st.peek() < 0 && asteroids[i] < 0) || (st.peek() > 0 && asteroids[i] > 0))){
                    st.push(asteroids[i]);
                }else{
                    
                }
                }   
            }
        }
        int[] ans = new int[st.size()];
        for(int i = ans.length-1; i >= 0; i--){
            ans[i] = st.pop();
        }
        return ans;
    }
}